# meedan/pender
# https://github.com/meedan/pender

FROM meedan/ruby
MAINTAINER sysops@meedan.com

ENV DEPLOYUSER=pender \
    DEPLOYDIR=/app/pender/current \
    RAILS_ENV=production \
    PRODUCT=pender \
    APP=pender \
    MIN_INSTANCES=4 \
    MAX_POOL_SIZE=12 \
    TERM=xterm \
    NODE_PATH=/app/pender/current/node_modules:/usr/lib/node_modules \
    PERSIST_DIRS="uploads project_export"

# runtime binaries
USER root
COPY production/bin /opt/bin/
RUN chmod 755 /opt/bin/*.sh

# godaddy intermediate cert
RUN cd /usr/local/share/ca-certificates \
		&& curl -o gdig2.crt https://certs.godaddy.com/repository/gdig2.crt.pem \
		&& update-ca-certificates

# nginx
COPY --chown=www-data:www-data ./production/nginx.conf /etc/nginx/sites-available/${APP}
RUN ln -s /etc/nginx/sites-available/${APP} /etc/nginx/sites-enabled/${APP} \
 && rm /etc/nginx/sites-enabled/default

# chrome repo
RUN curl -sL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
    && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list

# install stuff needed to take screenshots
RUN npm install chrome-remote-interface minimist
RUN apt-get update && apt-get install -y --no-install-recommends \
    google-chrome-stable

# pender user
RUN useradd ${DEPLOYUSER} -s /bin/bash -m

# deploy directory
RUN mkdir -p ${DEPLOYDIR} \
	&& chown -R ${DEPLOYUSER}:www-data /app \
	&& chmod 775 ${DEPLOYDIR} \
	&& chmod g+s ${DEPLOYDIR}

# copy and install the gems separately since they take so long to build 
# this way we can more easily cache them and allow code changes to be built later
USER ${DEPLOYUSER}
WORKDIR ${DEPLOYDIR}
COPY --chown=pender:www-data ./Gemfile ./Gemfile
COPY --chown=pender:www-data ./Gemfile.lock ./Gemfile.lock
RUN echo "gem: --no-rdoc --no-ri" > ~/.gemrc \
	&& bundle install --deployment --without development test 

COPY --chown=pender:www-data . ${DEPLOYDIR}

USER ${DEPLOYUSER}
RUN ln -s ${DEPLOYDIR} /app/${APP}-$(date -I)

# link to persisted objects and runtime config from the codebase
RUN ln -s /app/${APP}/shared/cache/json ${DEPLOYDIR}/tmp/cache \
 && ln -s /app/${APP}/shared/cache/html ${DEPLOYDIR}/public/cache \
 && ln -s /app/${APP}/shared/screenshots ${DEPLOYDIR}/public/screenshots \
 && /opt/bin/find_and_link_config_files.sh ${DEPLOYDIR}

# runtime config
USER root
EXPOSE 80
WORKDIR ${DEPLOYDIR}/current
CMD ["/opt/bin/start.sh"]
